// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ingredient {
  id                Int                 @id @default(autoincrement())
  name              String
  main_image        String
  images            String[]
  description       String
  room_temp_time    Float?
  refrigerated_time Float?
  frozen_time       Float?
  slug              String              @unique
  compost           Boolean             @default(true)
  category_id       Int
  category          Category            @relation(fields: [category_id], references: [id])
  recipes           Recipe_Ingredient[]
  users             User_Ingredient[]
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
}

model Category {
  id          Int          @id @default(autoincrement())
  name        CATNAME
  main_image  String
  description String
  slug        String       @unique
  ingredients Ingredient[]
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
}

model Recipe {
  id          Int                 @id @default(autoincrement())
  name        String
  main_image  String
  description String
  cuisine_id  Int
  cuisine     Cuisine             @relation(fields: [cuisine_id], references: [id])
  ingredients Recipe_Ingredient[]
  created_at  DateTime            @default(now())
  updated_at  DateTime            @updatedAt
}

model Cuisine {
  id         Int      @id @default(autoincrement())
  name       String
  recipes    Recipe[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Recipe_Ingredient {
  id            Int        @id @default(autoincrement())
  recipe_id     Int
  recipe        Recipe     @relation(fields: [recipe_id], references: [id])
  ingredient_id Int
  ingredient    Ingredient @relation(fields: [ingredient_id], references: [id])
  amount        String
  units         String
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
}

model User {
  id           Int               @id @default(autoincrement())
  first_name   String
  last_name    String
  country      String
  phone        String
  email        String            @unique
  password     String
  image        String?
  dietary_pref DIET[]
  vault        User_Ingredient[]
  created_at   DateTime          @default(now())
  updated_at   DateTime          @updatedAt
}

model User_Ingredient {
  id             Int            @id @default(autoincrement())
  user_id        Int
  user           User           @relation(fields: [user_id], references: [id])
  ingredient_id  Int
  ingredient     Ingredient     @relation(fields: [ingredient_id], references: [id])
  storage_method STORAGE_METHOD
  exp_date       DateTime
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
}

enum CATNAME {
  FRUITS
  VEGETABLES
  GRAINS
  LEGUMES
  NUTS
  SEEDS
  MEAT
  POULTRY
  FISH
  SEAFOOD
  DAIRY
  EGGS
  BEVERAGES
  CANNED
  CEREALS
  CONDIMENTS
  OTHER
}

enum DIET {
  VEGETARIAN
  VEGAN
  GLUTENFREE
  KOSHER
  PESCATARIAN
  KETO
  DAIRYFREE
  HALLAL
  FLEXITARIAN
  PALEO
  NUTFREE
}

enum STORAGE_METHOD {
  room_temp
  refrigerated
  frozen
}
